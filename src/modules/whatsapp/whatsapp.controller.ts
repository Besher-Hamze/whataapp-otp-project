import { Controller, Post, Body, Get } from '@nestjs/common';
import { WhatsAppService } from './whatsapp.service';

@Controller('whatsapp')
export class WhatsAppController {
  constructor(private readonly whatsappService: WhatsAppService) {}

  @Get('start')
  async startSession() {
    console.log("TTTTTTTTTTTTTTTTTTTT");
    // This is a placeholder to initiate the process; the actual session start will be via WebSocket
    const clientId = ''; // Will be generated by the WebSocket flow
    return { clientId, message: 'Session initiation requested. Connect to WebSocket at http://192.168.74.25:3000/whatsapp/start and emit "start-session" to proceed.' };
  }

  @Post('send-message')
  async sendMessage(@Body() body: { clientId: string; to: string; message: string }) {
    return await this.whatsappService.sendMessage('', body.clientId, body.to, body.message);
  }

  @Post('send-group-message')
  async sendGroupMessage(
    @Body()
    body: {
      clientId: string;
      to: string[];
      message: string;
    },
  ) {
    for (const num of body.to) {
      await this.whatsappService.sendMessage('', body.clientId, num, body.message);
      await new Promise((resolve) => setTimeout(resolve, 2000));
    }
    return { message: 'Group message sent to all contacts.' };
  }

  @Get('session-count')
  getSessionCount() {
    return {
      count: this.whatsappService.getActiveSessionCount(),
      sessions: this.whatsappService.getAllSessions(),
    };
  }
}